pipeline{

    agent any

    stages{

        stage('Continouse Download'){

            steps{
                git branch: 'main', url: 'https://github.com/clemenrance/Practice.git'
            }
        }
        stage('Unit Test'){

            steps{
                sh'mvn test'
            }
        }
        stage('Integration Test'){

            steps{
                sh'mvn verify -DskipUnitTests'
            }
        }
        stage('Code Build'){

            steps{
                sh'mvn clean install'
            }
        }
        stage('Static Test Analysis'){

            steps{

                script{
                    withSonarQubeEnv(credentialsId: 'sonar-api'){
                      sh 'mvn clean package sonar:sonar'
                    }
                }
            }
        }
        stage('Quality Gtae Analysis'){

            steps{

                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-api'
                }
            }
        }
        stage('upload Artifact to Nexus'){

            steps{

                script{
                 nexusArtifactUploader artifacts: [[artifactId: 'springboot', classifier: '', file: 'target/Uber.jar', type: 'jar']], credentialsId: 'nexus-api', groupId: 'om.example', nexusUrl: '34.229.9.250:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'demoapp-release', version: '1.0.3'   
                }
            }
        }
        stage('Building Docker image'){

            steps{

                script{
                    sh 'docker build -t myuber .'
                }
            }
        }
    }
}